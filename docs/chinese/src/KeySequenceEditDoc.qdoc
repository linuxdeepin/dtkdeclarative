/*!
    \qmltype KeySequenceEdit
    \inherits Control
    \inqmlmodule org.deepin.dtk
    \ingroup QML_TYPES
    \brief 提供一种快捷键监听的输入框控件.

    KeySequenceEdit 控件是一种用于监听快捷键事件的输入框控件。 KeySequenceEdit 提供了
    默认的描述文本区域，可通过属性直接设置其快捷键类型。同时，也提供了用于隐式提示的文本字段。

    KeySequenceEdit 只能用于监听应用内的快捷键，当 KeySequenceEdit 与系统快捷键发生冲突
    时，可能无法正常工作。

    KeySequenceEdit 的效果如下图所示：

    KeySequenceEdit 支持默认的快捷键设置，可用于界面初始化的显示，用户通过点击指定区域，触发
    KeySequenceEdit 快捷键监听机制，一旦触发，符合快捷键定义的任何键位都会被记录。

    KeySequenceEdit 的使用方式如下代码：
    \qml
    KeySequenceEdit {
        width: 504
        height: 36
        text: "关闭窗口"
        placeholderText: "请重新输入快捷键"
        keys: ["ALT", "F4"]
    }
    \endqml
 */

/*!
    \qmlproperty string org.deepin.dtk::KeySequenceEdit::text

    \c text 属性用于控制该快捷键的显示文本。一般用于指定该快捷键代表哪一操作。
 */

/*!
    \qmlproperty string org.deepin.dtk::KeySequenceEdit::placeholderText

    \c placeholderText 属性用于表示用户清空键位，或键位为空时，隐式提示的文本。
 */

/*!
    \qmlproperty list<string> org.deepin.dtk::KeySequenceEdit::keys

    \c keys 属性用于表示用户输入的键位，初始化时，可以通过控制该属性指定默认键位。当用户
    输入后，该键位会跟随用户输入的值发生变化。 \c keys 属性不会检查该键位是否正常。请在手动
    传递时确保键位正常。
 */

/*!
    \qmlproperty Palette org.deepin.dtk::KeySequenceEdit::backgroundColor

    \c backgroundColor 属性用于 KeySequenceEdit 控制背景颜色。
 */

/*!
    \qmlproperty Palette org.deepin.dtk::KeySequenceEdit::placeholderTextColor

    \c placeholderTextColor 属性用于 KeySequenceEdit 控制隐式提示的字体颜色。
 */
